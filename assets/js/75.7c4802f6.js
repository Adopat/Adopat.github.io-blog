(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{526:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),a("h2",{attrs:{id:"_1-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[s._v("#")]),s._v(" 1. 基本概念")]),s._v(" "),a("h3",{attrs:{id:"_1-1-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-安装"}},[s._v("#")]),s._v(" 1.1 安装")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("下载")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/ymzhu385/article/details/127303893",target:"_blank",rel:"noopener noreferrer"}},[s._v("windows下安装Git"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/507777078",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux下安装Git"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("配置用户名和邮箱")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Name"')]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email@example.com"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("配置SSH")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"youremail@example.com"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[a("code",[s._v("ssh-keygen")]),s._v("：这是一个生成SSH密钥的命令。")]),s._v(" "),a("p",[a("code",[s._v("-t rsa")]),s._v("：指定生成"),a("code",[s._v("RSA")]),s._v("密钥对，"),a("code",[s._v("RSA")]),s._v("是一种非对称加密算法，用于生成公钥和私钥。")]),s._v(" "),a("p",[a("code",[s._v('-C "youremail@example.com"')]),s._v("：指定注释信息，可以是任意字符串，通常是你的邮箱地址。注释信息将被添加到公钥文件的末尾，方便你识别这个密钥。  执行这个命令后，会提示你输入保存密钥的文件名和密码等信息，可以按照提示进行操作。默认情况下，密钥文件保存在用户主目录下的"),a("code",[s._v(".ssh")]),s._v("文件夹中，其中私钥文件名为"),a("code",[s._v("id_rsa")]),s._v("，公钥文件名为"),a("code",[s._v("id_rsa.pub")]),s._v("。可以使用文本编辑器打开公钥文件，将其中的内容添加到远程服务器或者代码仓库的SSH密钥列表中。这样，在使用SSH连接远程服务器或者访问代码仓库时，就可以使用这个密钥进行认证。")]),s._v(" "),a("p",[s._v("SSH可能出现的错误，参考资料")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7215124001529561148",target:"_blank",rel:"noopener noreferrer"}},[s._v("震惊！2023 年 3 月 23 日后，Github既然无法提交代码"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/wgb1234/p/17258916.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("解决github提交代码失败报错"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 删除known_hosts文件中github.com条目，从而使下一次连接 github.com 时，客户端会重新验证 github.com 的 RSA SSH Host Key，以确保安全连接")]),s._v("\nssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-R")]),s._v(" github.com\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 更新本地 SSH 客户端的 known_hosts 文件，以确保在使用 SSH 连接到 GitHub 时，能够正确地验证 GitHub 的身份，并保证连接的安全性")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-L")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://api.github.com/meta"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.ssh_keys | .[]'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/github.com /'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.ssh/known_hosts\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("Windows只需要执行 命令1，在 "),a("code",[s._v("git clone git@server-name:path/repo-name.git")]),s._v("会自动生成新的 "),a("code",[s._v("known_hosts")]),s._v("文件")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-2-常见概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-常见概念"}},[s._v("#")]),s._v(" 1.2 常见概念")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[s._v("概念名称")])]),s._v(" "),a("th",[a("strong",[s._v("描述")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[s._v("工作区")]),s._v("（Workspace）")]),s._v(" "),a("td",[s._v("就是在电脑里能看到的代码库目录，是我们搬砖的地方，新增、修改的文件会提交到暂存区")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("暂存区")]),s._v("（stage 或 index）")]),s._v(" "),a("td",[s._v("用于临时存放文件的修改，实际上上它只是一个文件（"),a("code",[s._v(".git/index")]),s._v("），保存待提交的文件列表信息。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("版本库/仓库")]),s._v("（Repository）")]),s._v(" "),a("td",[s._v("Git的管理仓库，管理版本的数据库，记录文件/目录状态的地方，所有内容的修改记录（版本）都在这里。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("服务端/远程仓库")]),s._v("（origin 或 remote）")]),s._v(" "),a("td",[s._v("服务端的版本库，专用的Git服务器，为多人共享提供服务，承担中心服务器的角色。本地版本库通过push指令把代码推送到服务端版本库。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("本地仓库")])]),s._v(" "),a("td",[s._v("用户机器上直接使用的的的版本库")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("分支")]),s._v("（Branch）")]),s._v(" "),a("td",[s._v("分支是从主线分离出去的“副本”，可以独立操作而互不干扰，仓库初始化就有一个默认主分支"),a("code",[s._v("master")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("头")]),s._v("（HEAD）")]),s._v(" "),a("td",[s._v("HEAD类似一个“指针”，指向当前活动 "),a("strong",[s._v("分支")]),s._v(" 的 "),a("strong",[s._v("最新版本")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("提交")]),s._v("（Commit）")]),s._v(" "),a("td",[s._v("把暂存区的所有变更的内容提交到当前仓库的活动分支。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("推送")]),s._v("（Push）")]),s._v(" "),a("td",[s._v("将本地仓库的版本推送到服务端（远程）仓库，与他人共享。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("拉取")]),s._v("（Pull）")]),s._v(" "),a("td",[s._v("从服务端（远程）仓库获取更新到本地仓库，获取他人共享的更新。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("获取")]),s._v("（Fetch）")]),s._v(" "),a("td",[s._v("从服务端（远程）仓库更新，作用同拉取（Pull），区别是不会自动合并。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("冲突")]),s._v("（Conflict）")]),s._v(" "),a("td",[s._v("多人对同一文件的工作副本进行更改，并将这些更改合并到仓库时就会面临冲突，需要人工合并处理。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("合并")]),s._v("（Merge）")]),s._v(" "),a("td",[s._v("对有冲突的文件进行合并操作，Git会自动合并变更内容，无法自动处理的冲突内容会提示人工处理。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("标签")]),s._v("（Tags）")]),s._v(" "),a("td",[s._v("标签指的是某个分支某个特定时间点的状态，可以理解为提交记录的别名，常用来标记版本。")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("master")]),s._v("（或main）")]),s._v(" "),a("td",[s._v("仓库的“"),a("code",[s._v("master")]),s._v("”分支，默认的主分支，初始化仓库就有了。"),a("code",[s._v("Github")]),s._v("上创建的仓库默认名字为“"),a("code",[s._v("main")]),s._v("”")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("origin/master")])]),s._v(" "),a("td",[s._v("表示远程仓库（"),a("code",[s._v("origin")]),s._v("）的“"),a("code",[s._v("master")]),s._v("”分支")])]),s._v(" "),a("tr",[a("td",[a("strong",[s._v("origin/HEAD")])]),s._v(" "),a("td",[s._v("表示远程仓库（"),a("code",[s._v("origin")]),s._v("）的最新提交的位置，一般情况等于“"),a("code",[s._v("origin/master")]),s._v("”")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-3-git工作流程-新项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-git工作流程-新项目"}},[s._v("#")]),s._v(" 1.3 Git工作流程(新项目)")]),s._v(" "),a("ul",[a("li",[s._v("0、"),a("strong",[s._v("准备仓库")]),s._v("：创建或从服务端克隆一个仓库。")]),s._v(" "),a("li",[s._v("1、"),a("strong",[s._v("搬砖")]),s._v("：在工作目录中添加、修改代码。")]),s._v(" "),a("li",[s._v("2、"),a("strong",[s._v("暂存")]),s._v("（git add）：将需要进行版本管理的文件放入暂存区域。")]),s._v(" "),a("li",[s._v("3、"),a("strong",[s._v("提交")]),s._v("（git commit）：将暂存区域的文件提交到Git仓库。")]),s._v(" "),a("li",[s._v("4、"),a("strong",[s._v("推送")]),s._v("（git push）：将本地仓库推送到远程仓库，同步版本库。")]),s._v(" "),a("li",[s._v("5、"),a("strong",[s._v("获取更新")]),s._v("（fetch/pull）：从服务端更新到本地，获取他人推送的更新，与他人协作、共享。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/Git.assets/image-20230331164028868.png",alt:"image-20230331164028868"}})]),s._v(" "),a("h3",{attrs:{id:"_1-4-git工作流程-历史项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-git工作流程-历史项目"}},[s._v("#")]),s._v(" 1.4 Git工作流程(历史项目)")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("克隆"),a("code",[s._v("dev")]),s._v("分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" dev origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("创建feature 分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" feature\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("在 feature 分支进行开发 "),a("code",[s._v("git add")]),s._v(" "),a("code",[s._v("git commit")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("feature 分支合并到 "),a("code",[s._v("dev")]),s._v("分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("将"),a("code",[s._v("dev")]),s._v(" 分支推送")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git push origin dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("由组长 将 feature 分支 合并到master分支进行项目发布")])])]),s._v(" "),a("h2",{attrs:{id:"_2-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用命令"}},[s._v("#")]),s._v(" 2. 常用命令")]),s._v(" "),a("h3",{attrs:{id:"_2-1-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-常用命令"}},[s._v("#")]),s._v(" 2.1 常用命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("查看帮助")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定命令的帮助信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-help")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("查看当前状态")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("git status命令用于显示工作目录和暂存区的状态。使用此命令能看到那些修改被暂存到了, 哪些没有, 哪些文件没有被Git tracked到。可以查看哪些文件没有提交")]),s._v(" "),a("blockquote",[a("p",[s._v("–- porcelain 模式，如果只关心文件和状态，增加参数 "),a("code",[s._v("git status --porcelain")])])])]),s._v(" "),a("li",[a("p",[s._v("查看提交历史")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看commit到版本库的信息,可以查看提交历史，以便确定要回退到哪个版本。")]),s._v(" "),a("blockquote",[a("p",[s._v("如果嫌输出信息太多，看得眼花缭乱的，可以试试加上"),a("code",[s._v("--pretty=oneline")]),s._v("参数 "),a("code",[s._v("git log --pretty=oneline")])])])]),s._v(" "),a("li",[a("p",[s._v("查看分支合并图")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--graph")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("查看命令历史")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看命令历史，以便确定要回到未来的哪个版本。")])]),s._v(" "),a("li",[a("p",[s._v("显示变更内容")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工作区和版本库比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" HEAD -- readme.txt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工作区和暂存区比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂存区和版本区比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cached")]),s._v(" HEAD 或者git "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cached")]),s._v(" commit-id\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 版本库之间提交记录的比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" commit-id  commit-id\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不同分支之间的比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("blockquote",[a("p",[a("code",[s._v("git diff --cached")]),s._v(" 和 "),a("code",[s._v("git diff --staged")]),s._v(" 作用相同,都是比较暂存区和版本库差异")])])]),s._v(" "),a("li",[a("p",[s._v("初始化本地仓库")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("获取一个本地仓库有两种方法")]),s._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[s._v("本地初始化一个仓库")])]),s._v(" "),a("li",[a("p",[s._v("从远程克隆一个仓库到本地")])])])]),s._v(" "),a("p",[s._v("对于第1种方式，如果想对本地现有的一个项目用 Git 来管理，可以直接进入该项目的目录下执行如下命令，就可以将其初始化成一个 Git 仓库了。")])]),s._v(" "),a("li",[a("p",[s._v("将文件添加到暂存区")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" xxx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("将暂存区的内容提交到版本库")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("跳过暂存区直接提交到版本库")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("将本地版本库推送到远端版本库")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("如果，push 的过程中提示当前分支进度落后于远程的分支，则需要通过 "),a("code",[s._v("git pull")]),s._v(" 命令来拉取远程最新状态和本地分支进行合并，完成之后再 push 到远程就可以了。")])])]),s._v(" "),a("li",[a("p",[s._v("拉取远程分支到本地并合并")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[a("code",[s._v("origin")]),s._v(" 表示远程代码库的一个别名（也可以修改为其他名字，可通过 "),a("code",[s._v("git remote")]),s._v(" 修改），"),a("code",[s._v("master")]),s._v(" 表示需要拉取合并的分支名称。")]),s._v(" "),a("p",[a("strong",[s._v("常用 "),a("code",[s._v("git pull --rebase origin master")]),s._v(" 用 "),a("code",[s._v("rebase")]),s._v(" 的方式进行，不会产生 merge 保持分支干净、整洁")])])])]),s._v(" "),a("li",[a("p",[s._v("将当前的工作状态保存到git栈")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个命令可以将当前的工作状态保存到git栈，在需要的时候再恢复。当在一个分支的开发工作未完成，却又要切换到另外一个分支进行开发的时候，可以先将自己写好的代码，储存到 git 栈，进行另外一个分支的代码开发。这时候 "),a("a",{attrs:{href:"https://git-scm.com/docs/git-stash",target:"_blank",rel:"noopener noreferrer"}},[s._v("git stash"),a("OutboundLink")],1),s._v(" 命令就派上用场了！")])]),s._v(" "),a("li",[a("p",[s._v("查看文件每行的提交历史(追责)")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" blame filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("可用于查看某个文件中的每一行是那次提交产生的，是谁提交的，什么时候提交的，提交的版本号是多少等等详细信息，在实际工作中方便对出问题的代码进行追责，找到产生 BUG 的责任人。")])])]),s._v(" "),a("li",[a("p",[s._v("标签的操作")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为当前提交打上 v1.0 的标签")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag v1.0 \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为这个节点打上 v1.0 的标签")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag v1.0 ab1591eb4e06c1e93fdd50126b9fab8a88d89155 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("开发某个版本可以打标签")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-2-版本回退命令-重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-版本回退命令-重点"}},[s._v("#")]),s._v(" 2.2  版本回退命令(重点)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("回到指定的历史版本")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" commit_id\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("回到指定的历史版本,head代表当前版本,如果要回到当前版本的上一个版本可以使用 "),a("code",[s._v("git reset --hard HEAD^")])]),s._v(" "),a("blockquote",[a("p",[s._v("回到前100个版本 "),a("code",[s._v("git reset hard HEAD~100")])])])])]),s._v(" "),a("h3",{attrs:{id:"_2-3-修改命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-修改命令"}},[s._v("#")]),s._v(" 2.3  修改命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("丢弃工作区修改")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时使用。"),a("code",[s._v("git checkout")]),s._v("其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。")])]),s._v(" "),a("li",[a("p",[s._v("丢弃暂存区修改")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一步")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二步")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果文件增加到了"),a("strong",[s._v("暂存区")]),s._v(",当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令"),a("code",[s._v("git reset HEAD <file>")]),s._v("，第二步 使用 "),a("code",[s._v("git checkout -- file")])])]),s._v(" "),a("li",[a("p",[s._v("丢弃版本库的修改")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" commit_id\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果文件已经提交到"),a("strong",[s._v("版本库")]),s._v(",已经提交了不合适的修改到版本库时，想要撤销本次提交。直接使用版本回退。注意此时还没提交到远程库。")])]),s._v(" "),a("li",[a("p",[s._v("丢弃远程库的修改")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果文件已经提交到"),a("strong",[s._v("远程库")]),s._v(",已经提交了不合适的修改到版本库，并且已经提交到远程库时使用。")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("git log")]),s._v("查询提交commit id")]),s._v(" "),a("li",[a("code",[s._v("git revert commit id")])]),s._v(" "),a("li",[a("code",[s._v("git push origin dev")])])])])]),s._v(" "),a("h3",{attrs:{id:"_2-4-删除命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-删除命令"}},[s._v("#")]),s._v(" 2.4 删除命令")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("恢复工作区文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不小心删除了工作区文件，可以使用 "),a("code",[s._v("git checkout -- <filename>")]),s._v(" 恢复，适用于"),a("strong",[s._v("文件已经提交到版本库")])])]),s._v(" "),a("li",[a("p",[s._v("删除暂存区文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果文件已经增加到"),a("strong",[s._v("暂存区")]),s._v("，先使用 "),a("code",[s._v("git reset HEAD filename")]),s._v(" 从暂存区进行删除，此时工作区还有文件，可以选择修改或者直接删除")])]),s._v(" "),a("li",[a("p",[s._v("删除版本库或者远程库文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" filename\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果文件已经增加到"),a("strong",[s._v("版本库")]),s._v("或者"),a("strong",[s._v("远程库")]),s._v("，先使用 "),a("code",[s._v("git rm filename")]),s._v(" 进行文件删除，后使用 "),a("code",[s._v("git commit")])])]),s._v(" "),a("li",[a("p",[s._v("直接删除")]),s._v(" "),a("p",[s._v("如果文件在"),a("strong",[s._v("工作区")]),s._v(",直接删除。")])])]),s._v(" "),a("h3",{attrs:{id:"_2-5-远程库命令-重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-远程库命令-重点"}},[s._v("#")]),s._v(" 2.5 远程库命令（重点）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("查看本地关联的远程仓库")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("如果要删除 关联的远程库使用命令 "),a("code",[s._v("git remote rm origin")]),s._v(" 然后重新添加关联的远程库 "),a("code",[s._v("git remote add origin git@server-name:path/repo-name.git")])]),s._v(" "),a("p",[s._v("参考资料:"),a("a",{attrs:{href:"http://www.noobyard.com/article/p-opycmfmt-kr.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("git修改remote"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[s._v("查看远程仓库的基本信息")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote show origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("远程仓库的重命名和删除")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v(" testGitAdd testAdd\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote remove testAdd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("本地库和远程库进行关联")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin git@server-name:path/repo-name.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("向远程库推送内容")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("本地库和远程库进行关联后，第一次推送master分支的所有内容，此后，每次本地提交后，只要有必要，就可以使用命令"),a("code",[s._v("git push origin master")]),s._v("推送最新修改")])]),s._v(" "),a("li",[a("p",[s._v("从远程库中克隆项目")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone git@server-name:path/repo-name.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("在使用 "),a("code",[s._v("git clone")]),s._v(" 命令克隆远程仓库时，Git已经默认将远程仓库与本地仓库建立了连接关系，因此不需要再执行 "),a("code",[s._v("git remote")]),s._v(" 命令来关联远程仓库。 执行 "),a("code",[s._v("git clone")]),s._v(" 命令时，Git会自动将远程仓库的 URL 地址添加到本地仓库的配置文件中，同时还会将远程仓库的别名设置为 "),a("code",[s._v("origin")]),s._v("。因此，当你在本地仓库中执行 "),a("code",[s._v("git remote -v")]),s._v(" 命令时，就可以看到远程仓库的 URL 地址和别名：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\norigin  https://github.com/user/repo.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\norigin  https://github.com/user/repo.git "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这表明 Git已经将远程仓库与本地仓库关联起来了，可以直接使用 "),a("code",[s._v("git push")]),s._v(" 和 "),a("code",[s._v("git pull")]),s._v(" 等命令与远程仓库进行交互(git clone 开源项目,关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的开源项目的账户列表中)。如果需要关联其他的远程仓库，可以使用 "),a("code",[s._v("git remote add")]),s._v(" 命令手动添加，但通常情况下不需要进行这个操作。")]),s._v(" "),a("p",[s._v("参考资料:")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/inthat/article/details/122376718",target:"_blank",rel:"noopener noreferrer"}},[s._v("git clone --depth=1使用场景(限制 clone 的深度，不会下载 Git 协作的历史记录)"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[s._v("克隆指定分支(常用)")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" dev origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("将远程库的 "),a("code",[s._v("dev")]),s._v(" 分支克隆到本地")])])]),s._v(" "),a("li",[a("p",[s._v("推送分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程库的 master 分支")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送到远程库的 dev 分支")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin dev\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将本地master分支推送到github main分支(如果不指定main分支，会新建master分支)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" git@github.com:Adopat/adopat-blog.git master:main\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用http的方式进行推送 token 填写github 上生成的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" https://token@github.com/Adopat/blog.git master:main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("blockquote",[a("p",[s._v("在有些时候使用SSH推送一直失败或者由于内网防火墙的问题导致22端口被禁可以使用 http的方式进行推送或者更改为443端口进行推送")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/414028184",target:"_blank",rel:"noopener noreferrer"}},[s._v("github使用token进行推送"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/521340971",target:"_blank",rel:"noopener noreferrer"}},[s._v("坑：ssh: connect to host github.com port 22: Connection refused"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[s._v("在本地创建和远程分支对应的分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" branch-name origin/branch-name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("本地和远程分支的名称最好一致")])])]),s._v(" "),a("li",[a("p",[s._v("建立本地分支和远程分支的关联")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --set-upstream branch-name origin/branch-name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("从远程抓取分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("，如果有冲突，要先处理冲突。注意如果远程分支和本地分支没有进行关联，例如没有先clone 远程分支到本地，直接使用 git pull origin dev 会发生报错。错误提示: "),a("a",{attrs:{href:"https://blog.csdn.net/ZCaesarK/article/details/125316158",target:"_blank",rel:"noopener noreferrer"}},[s._v("git pull 提示错误 fatal: refusing to merge unrelated histories"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("解决方法")]),s._v(" "),a("p",[s._v("在git pull和git push命令中添加–allow-unrelated-histories\n让git允许提交不关联的历史代码。")]),s._v(" "),a("p",[a("code",[s._v("git pull origin master --allow-unrelated-histories")])]),s._v(" "),a("p",[a("code",[s._v("git push origin master --allow-unrelated-histories")])])])])]),s._v(" "),a("h3",{attrs:{id:"_2-6-分支命令-重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-分支命令-重点"}},[s._v("#")]),s._v(" 2.6  分支命令（重点）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("创建分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("切换分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("或者git switch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("创建+切换分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一种方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二种方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("删除分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("注意只有合并后的分支才能进行删除,如果需要强行删除分支，应该使用 "),a("code",[s._v("git branch -D <name>")])])])]),s._v(" "),a("li",[a("p",[s._v("合并某分支到当前分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fast-forward 合并模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 禁用 fast-forward 合并模式，推荐使用这种模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge with no-ff"')]),s._v(" dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.wenjiangs.com/article/9gbz5bcb.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("详解 git 的四种 merge 方式"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[s._v("查看分支")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("用于显示本地所有分支以及当前所在哪个分支")])])]),s._v(" "),a("li",[a("p",[s._v("分支同步")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("本地有新分支，远程仓库没有。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本地创建新分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout issue-101\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送本地分支到远程库 方式一")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin issue-101\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送本地分支到远程库 方式二(推荐使用)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --set-upstream origin issue-101\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("git push --set-upstream origin issue-101 是将本地分支 feat-xxx 推送到远程仓库 origin 并建立本地分支与远程分支的关联关系，下一次 push 时可以直接使用 git push 命令。")]),s._v(" "),a("p",[s._v("而 git push origin issue-101 则是将本地分支 feat-xxx 直接推送到远程仓库 origin，不会建立分支关联关系。如果下一次想要推送该分支，需要再次指定分支名称。")]),s._v(" "),a("p",[s._v("简单来说，git push --set-upstream origin issue-101 更加方便，可以省略分支名称，而 git push origin feat-xxx 则需要指定分支名称。")])])]),s._v(" "),a("li",[a("p",[s._v("远程仓库有新分支，本地没有。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先将某个远程主机的更新，全部取回本地：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再次查看远程分支：发现远程的分支已经可以看见了。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后拉取远程分支到本地：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" 远程分支名 origin/远程分支名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[a("code",[s._v("git fetch origin issue-103:issue-103")]),s._v(" 这个命令的意思就是拉取远程的一个叫issue-103的分支，并在本地创建一个叫issue-103的分支和远程的分支匹配。")])])]),s._v(" "),a("li",[a("p",[s._v("本地删除了分支，远程也想删除。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除本地分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" issue-102\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除远程分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" issue-102\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("远程删除了分支，本地也想删除。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看远程分支和本地分支的对应关系")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote show origin\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除远程已经删除过的分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote prune origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("挑拣节点合并到当前分支上")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("通常使用在BUG修复 ,")]),s._v(" "),a("p",[s._v("修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；")]),s._v(" "),a("p",[s._v("当手头工作没有完成时，先把工作现场"),a("code",[s._v("git stash")]),s._v("一下，然后去修复bug，修复后，再"),a("code",[s._v("git stash pop")]),s._v("，回到工作现场；（注意 git stash pop应该在bug修复后使用，否则会报错，执行顺序应该是"),a("code",[s._v("gti stash")]),s._v(" --\x3e"),a("code",[s._v("git cherry-pick <commit>")]),s._v("--\x3e"),a("code",[s._v("git stash pop")]),s._v("）")]),s._v(" "),a("p",[s._v("在master分支上修复的bug，想要合并到当前"),a("code",[s._v("dev")]),s._v("分支，可以用"),a("code",[s._v("git cherry-pick <commit>")]),s._v("命令，把bug提交的修改“复制”到当前分支，避免重复劳动。")]),s._v(" "),a("p",[s._v("参考 "),a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/900388704535136",target:"_blank",rel:"noopener noreferrer"}},[s._v("BUG分支"),a("OutboundLink")],1)])])])]),s._v(" "),a("h2",{attrs:{id:"_3-git冲突管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git冲突管理"}},[s._v("#")]),s._v(" 3. Git冲突管理")]),s._v(" "),a("h3",{attrs:{id:"_3-1-冲突管理产生原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-冲突管理产生原因"}},[s._v("#")]),s._v(" 3.1 冲突管理产生原因")]),s._v(" "),a("p",[s._v("合并文件时，同一个文件的同一个位置都修改了，且内容不同，会产生冲突")]),s._v(" "),a("h3",{attrs:{id:"_3-2-冲突管理产生情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-冲突管理产生情况"}},[s._v("#")]),s._v(" 3.2 冲突管理产生情况")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("两分支合并")])]),s._v(" "),a("li",[a("p",[s._v("远程仓库代码拉取（pull）到本地")])])]),s._v(" "),a("h3",{attrs:{id:"_3-3-冲突管理如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-冲突管理如何解决"}},[s._v("#")]),s._v(" 3.3 冲突管理如何解决")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("git status 查看冲突文件")])]),s._v(" "),a("li",[a("p",[s._v("手动修改冲突部分")])]),s._v(" "),a("li",[a("p",[s._v("git add  告诉Git冲突解决了")])]),s._v(" "),a("li",[a("p",[s._v("git commit -m ‘解决冲突’ （解决冲突为注释，可自定义）")])])]),s._v(" "),a("h3",{attrs:{id:"_3-4-如何避免冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-如何避免冲突"}},[s._v("#")]),s._v(" 3.4 如何避免冲突")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("尽可能频繁地使用 git pull 同步代码，每次修改都基于最新的源码，大大减少发生冲突的概率。")])]),s._v(" "),a("li",[a("p",[s._v("还要减少每次提交代码的行数，每次做完一个小修改就提交并上传代码。这样即使发生冲突了，你也能很好地解决。")])])]),s._v(" "),a("h2",{attrs:{id:"_3-git分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git分支管理"}},[s._v("#")]),s._v(" 3. Git分支管理")]),s._v(" "),a("p",[s._v("常见的Git分支分类")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("master")]),s._v(" 分支：是主分支，是最终上线代码的分支，该分支被设置被保护分支（锁住），普通开发人员没有权限操作，只有团队 leader 有合并的权限；")]),s._v(" "),a("li",[a("code",[s._v("dev")]),s._v(" 分支：是用于开发的分支，该分支被设置为默认 clone 的分支，也用于合并到 master 之前进行测试的分支，普通开发人员从远程 clone 到本地的默认分支，可以进行合并等操作；")]),s._v(" "),a("li",[a("code",[s._v("test")]),s._v(" 分支：是用于测试的分支，测试人员可以将自己开发分支中的修改合并到 test 分支在测试环境进行测试，一般该分支不合并到任何分支；")]),s._v(" "),a("li",[a("code",[s._v("feature_xx")]),s._v(" 分支：是用户开发自己模块功能的特征分支，可以叫 "),a("code",[s._v("feature_login")]),s._v(", "),a("code",[s._v("feature_ui")]),s._v(", "),a("code",[s._v("feature_payment")]),s._v(" 等与开发的功能相关的名称，该分支上的功能开发完、测试无误后可合并到 "),a("code",[s._v("dev")]),s._v(" 分支上。")]),s._v(" "),a("li",[s._v("bug 分支：临时修复bug时创建的分支，修复完成，删除分支")])]),s._v(" "),a("h2",{attrs:{id:"_4-git-团队合作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-团队合作"}},[s._v("#")]),s._v(" 4. Git 团队合作")]),s._v(" "),a("p",[s._v("团队合作流程，在自己 feature 分支上开发完成后，需要合并到 "),a("code",[s._v("dev")]),s._v(" 分支，然后将版本库的 "),a("code",[s._v("dev")]),s._v(" 内容推送到远程库")]),s._v(" "),a("ol",[a("li",[s._v("首先，可以试图用"),a("code",[s._v("git push dev<branch-name>")]),s._v("推送自己的修改；")]),s._v(" "),a("li",[s._v("如果推送失败，则因为远程分支比你的本地更新，需要先用"),a("code",[s._v("git pull")]),s._v("试图合并；")]),s._v(" "),a("li",[s._v("如果合并有冲突，则解决冲突，并在本地提交；")]),s._v(" "),a("li",[s._v("没有冲突或者解决掉冲突后，再用"),a("code",[s._v("git push dev<branch-name>")]),s._v("推送就能成功！")])]),s._v(" "),a("p",[s._v("如果"),a("code",[s._v("git pull")]),s._v("提示"),a("code",[s._v("no tracking information")]),s._v("，则说明本地分支和远程分支的链接关系没有创建，用命令"),a("code",[s._v("git branch --set-upstream-to <branch-name> origin/<branch-name>")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_5-常见的代码托管平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-常见的代码托管平台"}},[s._v("#")]),s._v(" 5. 常见的代码托管平台")]),s._v(" "),a("h3",{attrs:{id:"_5-1-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-github"}},[s._v("#")]),s._v(" 5.1  "),a("code",[s._v("GitHub")])]),s._v(" "),a("p",[s._v("是一个开发者平台。目前是开源项目的主要集散地。")]),s._v(" "),a("h3",{attrs:{id:"_5-2-gitee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-gitee"}},[s._v("#")]),s._v(" 5.2  "),a("code",[s._v("Gitee")])]),s._v(" "),a("p",[s._v("是一个代码托管平台。")]),s._v(" "),a("h3",{attrs:{id:"_5-3-gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-gitlab"}},[s._v("#")]),s._v(" 5.3  "),a("code",[s._v("GitLab")])]),s._v(" "),a("p",[a("code",[s._v("GitLab")]),s._v("：是一个一体化的"),a("code",[s._v("DevOps")]),s._v("平台，提供覆盖软件全开发生命周期的管理功能，能提高企业"),a("code",[s._v("DevOps")]),s._v("能力。")]),s._v(" "),a("p",[a("strong",[s._v("参考资料")]),s._v(": "),a("a",{attrs:{href:"https://www.zhihu.com/question/58702398",target:"_blank",rel:"noopener noreferrer"}},[s._v("什么是DevOps"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_5-4-极狐gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-极狐gitlab"}},[s._v("#")]),s._v(" 5.4  "),a("code",[s._v("极狐GitLab")])]),s._v(" "),a("p",[a("code",[s._v("极狐GitLab")]),s._v("："),a("code",[s._v("一体化DevOps平台")]),s._v("，是在中国大陆和港澳地区发行的企业级"),a("code",[s._v("GitLab")]),s._v("版本，拥有"),a("code",[s._v("GitLab")]),s._v("技术和品牌独家授权，基于"),a("code",[s._v("GitLab EE")]),s._v("和极狐("),a("code",[s._v("GitLab")]),s._v(")持有独立知识产权的——"),a("code",[s._v("JH")]),s._v("代码仓库构建，由极狐("),a("code",[s._v("GitLab")]),s._v(")公司在国内独立运营。")]),s._v(" "),a("h3",{attrs:{id:"_5-5-对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-对比"}},[s._v("#")]),s._v(" 5.5 对比")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/437490876",target:"_blank",rel:"noopener noreferrer"}},[s._v("极狐GitLab、GitLab、GitHub、Gitee对比干货分享"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_6-gitlab流水线搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-gitlab流水线搭建"}},[s._v("#")]),s._v(" 6. "),a("code",[s._v("GitLab")]),s._v("流水线搭建")]),s._v(" "),a("p",[a("strong",[s._v("搭建步骤")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("项目前准备")]),s._v(" "),a("p",[s._v("安装"),a("code",[s._v("JDK")])]),s._v(" "),a("p",[s._v("安装"),a("code",[s._v("Maven")])]),s._v(" "),a("p",[s._v("安装"),a("code",[s._v("Docker")])]),s._v(" "),a("p",[s._v("安装"),a("code",[s._v("Git")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_44446122/article/details/122257691?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考Linux常见配置"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("安装"),a("code",[s._v("GitLab-ce")])])]),s._v(" "),a("li",[a("p",[s._v("安装"),a("code",[s._v("Gitlab-Runner")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("GitLab")]),s._v(" 模板创建"),a("code",[s._v("SpringBoot")]),s._v("项目")])]),s._v(" "),a("li",[a("p",[s._v("git clone 项目到本地 编写 "),a("code",[s._v(".gitlab-ci.yml")]),s._v(" "),a("code",[s._v("Dockerfile")]),s._v(" "),a("code",[s._v("restartImage.sh")]),s._v(" 文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .gitlab-ci.yml 配置文件")]),s._v("\nstages:\n  - deploy\nbuild:\n  stage: deploy\n  script:\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/admin2/projects/testbuild\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull git@server-name:path/repo-name.git "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取最新代码,填写gitlab 项目地址,需要配置SSH")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull success"')]),s._v("\n    - mvn package  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打jar包")]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mvn package success   "')]),s._v("\n    - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" restartImage.sh\n    - ./restartImage.sh   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行启动镜像脚本")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dockerfile")]),s._v("\nFROM openjdk:8u252-jre\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#jdk版本")]),s._v("\nCOPY *.jar /app.jar\nENTRYPOINT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app.jar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restartImage.sh 部署脚本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("app_dir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/admin2/projects/testbuild/target\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("apps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("demo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取镜像对应的容器Id")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("exisImageId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-qa")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--filter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ancestor")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("buildimage"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exisImageId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果容器存在就停止然后删除容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-z")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exisImageId")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exisImageId")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$exisImageId")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"************ del images success!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/admin2/projects/testbuild\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除调当前文件下的jar包")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--force")]),s._v(" demo.jar\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"************ rm oldJar success"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把打包好的jar包复制出来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" target/demo-0.0.1-SNAPSHOT.jar  demo.jar\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"************ cp newJar success"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成新镜像并映射端口启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" buildimage "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"************ create newImage success"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" mybuildimage "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8081")]),s._v(":8081 buildimage\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"************  image start success"')]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("git add")]),s._v(" "),a("code",[s._v("git commit")]),s._v(" "),a("code",[s._v("git push")]),s._v(" 触发自动构建")])]),s._v(" "),a("li",[a("p",[s._v("参考资料")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_40310480/article/details/121349100",target:"_blank",rel:"noopener noreferrer"}},[s._v("从0开始,gitlab+gitlab-runner+springboot+docker,实现CICD流水线自动部署"),a("OutboundLink")],1)])])]),s._v(" "),a("h2",{attrs:{id:"_7-git图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-git图解"}},[s._v("#")]),s._v(" 7. Git图解")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/Git.assets/Git%E8%84%91%E5%9B%BE.webp",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_8-参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-参考资料"}},[s._v("#")]),s._v(" 8. 参考资料")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git小白教程"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/anding/p/16987769.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git入门图文教程(1.5W字40图)🔥🔥--深入浅出、图文并茂"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600",target:"_blank",rel:"noopener noreferrer"}},[s._v("廖雪峰Git教程"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6869519303864123399",target:"_blank",rel:"noopener noreferrer"}},[s._v("「一劳永逸」一张脑图带你掌握Git命令 "),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/521xueweihan/git-tips",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git 的奇技淫巧"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);